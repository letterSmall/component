<div class="vac2-video-outbox">

<div class="vac2-video-container">
  

   {% if section.settings.video_url != blank %}
   
    <div class="vac2-video-wrapper">
   <video id="video_vac2" width="100%" loop="loop" controls webkit-playsinline="true" playsinline="true" muted >
    <source src="{{  section.settings.video_url }}">
  </video>
    </div>

    
   <div class="vac2-videotext-box">
  {% if section.settings.image %}
    <img class="vac2-video-bg medium-down--hide" src="{{ section.settings.image | img_url:'master' }}"/>
    <img class="vac2-video-bg large-up--hide" src="{{ section.settings.image_mobile | img_url:'master' }}"/>
  {% endif %}

  {% if section.settings.image_play %}
    <img class="vac2-video-playbtn" src="{{ section.settings.image_play | img_url:'master' }}"/>
  {% endif %}

</div> 
  
  <script defer>
  $(function(){
    $(".vac2-video-playbtn").click(function(){
      $("#video_vac2").trigger('play');
      $(".vac2-videotext-box").css("z-index","0");

    });

       $("body").bind("click",function(evt){ 
  if($(evt.target).closest(".vac2-video-container").length==0)
  { 
    $("#video_vac2").trigger('pause');
          $(".vac2-videotext-box").css("z-index","2");
  } 
}); 
  });
  </script>
  
  
      
  {% else %}
     <div class="vac2-video-wrapper">
  <div id="player"></div>
  </div>
 <div class="vac2-videotext-box">
  {% if section.settings.image %}
    <img class="vac2-video-bg medium-down--hide" src="{{ section.settings.image | img_url:'master' }}"/>
    <img class="vac2-video-bg large-up--hide" src="{{ section.settings.image_mobile | img_url:'master' }}"/>
  {% endif %}

  {% if section.settings.image_play %}
    <img class="vac2-video-playbtn" src="{{ section.settings.image_play | img_url:'master' }}"/>
  {% endif %}

</div>

     <script>

      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '360',
          width: '640',
          videoId: '{{ section.settings.video_youtubeurl.id }}',
           playerVars: {'loop': 1, 'showinfo': 0, 'controls': 0, 'rel': 0},
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.mute();
//         event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING) {
          event.target.unMute();
        }
      }
      function stop(){
        player.stopVideo();
      }
      function palyvideos(){
        player.playVideo();
      }
      

          $(".vac2-video-playbtn").click(function(){
            if(player){  
          player.playVideo();
            }
      $(".vac2-videotext-box").css("z-index","0");

    });

       $("body").bind("click",function(evt){ 
  if($(evt.target).closest(".vac2-video-container").length==0)
  { 
    if(player){    player.stopVideo();}
          $(".vac2-videotext-box").css("z-index","2");
  } 
}); 
       
       
    </script>
  
  
  
  
  
  
  
  
  {% endif %}
  
  
</div>


</div>


{% schema %}
  {
    "name": "Vac2pro Video",
    "settings": [
          {
            "type": "image_picker",
            "id": "image",
            "label": "image"
          },{
            "type": "image_picker",
            "id": "image_mobile",
            "label": "image mobile"
          },{
            "type": "text",
            "id": "video_url",
            "label": "video_url"
          },{
        "type": "video_url",
        "id": "video_youtubeurl",
        "label": "Youtube Video link",
        "accept": ["youtube", "vimeo"]
      },{
            "type": "image_picker",
            "id": "image_play",
            "label": "image_play"
          }
    ],
    "presets": [
      {
        "name": "Vac2pro Video",
        "category": "Ho-Advance"
 
      }
    ]
  }
{% endschema %}

